# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/
"`"
$( document ).ready(function() {
var rendered_forts = [<%= render partial: "fort", collection: @forts %>];
var rendered_encampments = [<%= render partial: "encampment", collection: @encampments %>];
var clicked = ["f", 1];
// Defining lists of territories and continents with their active color values and their starting points.

	var colors = [["#central_america", [0xe5,0x42,0x42], [488,780]], ["#central_asia",[0xf1,0x71,0x71], [2054,526]], ["#central_south_america",[0xfb,0x07,0x07], [822,1020]], ["#china",[0xfb,0x07,0xca], [2342,542]], ["#coastal_africa",[0xd0,0x2e,0xb0], [1436,959]], ["#coastal_south_america",[0xc4,0x56,0xae], [908,1340]], ["#congo",[0x87,0x13,0x70], [1720,1015]], ["#eastern_africa",[0x96,0x0e,0xbd], [1844,887]], ["#eastern_canada",[0xc1,0x52,0xe1], [394,206]], ["#eastern_south_america",[0xc6,0x00,0xff], [904,1088]], ["#egypt",[0x5d,0x1e,0x6f], [1724,774]], ["#greenland",[0x48,0x0e,0xcb], [918,204]], ["#iceland",[0x84,0x55,0xef], [1393,399]], ["#india",[0x32,0x3a,0xde], [2278,786]], ["#indonesia",[0x5f,0x65,0xd0], [2558,1084]], ["#madagascar",[0x5f,0xa4,0xd0], [2052,1280]], ["#middle_east",[0x0f,0x97,0xed], [1868,664]], ["#mongolia",[0x33,0x79,0xa6], [2480,568]], ["#non_contiguous_united_states",[0x7e,0xc2,0xed], [0,340]], ["#northeastern_united_states",[0x30,0xcf,0xd5], [704,596]], ["#northern_australia",[0x6b,0xf6,0xfb], [2872,1260]], ["#northern_europe",[0x22,0x7f,0x82], [1647,500]], ["#northwestern_united_states",[0x67,0x91,0x93], [414,598]], ["#pacific_asia",[0x73,0xe1,0xb4], [2834,526]], ["#new_zealand",[0x06,0xb5,0x6d], [3010,1163]], ["#russia",[0x23,0xab,0x73], [1902,206]], ["#sahara",[0x23,0xab,0x33], [1454,730]], ["#southeastern_asia",[0x7b,0xe1,0x87], [2406,800]], ["#southeastern_united_states",[0x00,0xff,0x1e], [718,734]], ["#southern_african_territory",[0x19,0x77,0x24], [1732,1242]], ["#southern_australia",[0x50,0x7E,0x55], [2714,1296]], ["#southern_europe",[0x8f,0xc6,0x40], [1688,602]], ["#southwestern_united_states",[0x51,0x8a,0x00], [406,660]], ["#ukraine",[0x97,0xde,0x32], [1660,340]], ["#united_kingdom", [0x19,0xaf,0xe0], [1522,490]], ["#western_europe",[0x8a,0xa6,0x33], [1520,578]], ["#western_canada", [0xff,0xea,0x3d], [250,349]], ["#western_south_america",[0xea,0xdb,0x35], [834,1143]]];

	var color_key = [["#asia", [0x32,0x7c,0x00], [1844,226], [1662,1018]], ["#australia", [0x00,0x7c,0x78], [2546,1080], [868,640]], ["#africa", [0x2f,0x44,0x5a], [1444,724], [722,842]], ["#europe", [0x5a,0x4c,0x2f], [1390,332], [654,442]], ["#north_america", [0x43,0x5a,0x2f], [0,178], [1532,912]], ["#south_america", [0x53,0x2f,0x5a], [798,1008], [528,786]]];

// order asia australia africa e na sa 

var continents = [[1,3,13,16,17,23,25,27],
[14,20,24,30],
[4,6,7,10,15,26,29],
[12,21,31,33,34,35],
[0,8,11,18,19,22,28,32,36],
[2,5,9,37]];

function place_object(object_id) {
	var placing = "t";
	
	$('.test1').append('<canvas id="create_sprite_canvas" style="z-index:101;" width=' + $(".map").width() + ' height=' +  $(".map").height() + '>');
	var sc = document.getElementById("create_sprite_canvas");
	var sctx = sc.getContext("2d");
	var img = document.getElementById(object_id);
	var ui_offset = $(".test1").offset();
	$("#create_sprite_canvas").css("z-index","32");

	$('body').append('<canvas id="territory_canvas" class="temp_canvas" width=' + 3508 + ' height=' +  1956 + '>');
	var tc = document.getElementById("territory_canvas");
	var tctx = tc.getContext("2d");
	var img = document.getElementById("encampment");
	tctx.drawImage(img,0,0);

	$(".test1").mousemove( function(event) {

		if (placing == "t") {
	
			clear_canvas("create_sprite_canvas");
			sctx.drawImage(img,(event.pageX - ui_offset.left) ,(event.pageY - ui_offset.top));

		}

	});
	
	$(".test1").click( function(event) {
		$(".test").text("called");
		if (placing == "t") {
			
			clear_for_clicks("move");
			$("#create_sprite_canvas").css("z-index","-80");
			var elem = document.elementFromPoint(event.pageX, event.pageY);
			$("#create_sprite_canvas").css("z-index","50");
			clear_for_clicks("put back","create");
			var last_click = colors[clicked[1]][0];
			last_click = last_click.replace("#","");			

			if (elem.id == last_click) {

				var sf = parseInt($(colors[clicked[1]][0]).css("max-width"))/$(colors[clicked[1]][0]).width();
				var pixelData = tc.getContext('2d').getImageData(((event.pageX - ui_offset.left)*sf), ((event.pageY - ui_offset.top)*sf), 1, 1).data;
				if (pixelData[3] != 0x00) {
					placing = "f";
					$("#territory_canvas").remove();
					var territory_offset = $(colors[clicked[1]][0]);

					$("#user_encampments_attributes_100000000000_xco").val((event.pageX - territory_offset.left)*sf);
					$("#user_encampments_attributes_100000000000_yco").val((event.pageY - territory_offset.top)*sf);
					$("#user_encampments_attributes_100000000000_territory").val(colors[clicked[1]][0]);
					$("#user_encampments_attributes_100000000000_date_created").val(new Date());
					return 1;

					
				}
			}
			
		} 

	});

}

function clear_for_clicks(action, canvas) {
	if (action == "move") {
		$(".canvas").css("z-index","-30");
	}
	else if (action == "put back") {
		for (i = 0; i < canvas.length; i++) {
			if (canvas[i] == "territory") {
				$(".territory_sprites").css("z-index","18");
			}
			else if (canvas == "continent") {
				$(".continent_sprites").css("z-index","15");
			}
			else if (canvas == "create") {
				$(".create_sprite_canvas").css("z-index","15");
			}
		}
	}
}

function clear_canvas(id) {
	var canvas = document.getElementById(id);
	var canvastx = canvas.getContext("2d");
	var with_hash = "#".concat(id);
	canvastx.clearRect ( 0 , 0 , $(with_hash).width(), $(with_hash).height() );
}



function render_forts(level, clear) {

	if (level == 4) {

		var current_territory = colors[clicked[1]][0];
		var forts_to_be_rendered = [];
		for (i = 0; i < rendered_forts.length; i++) {
			var temp_terr = rendered_forts[i];
			if (temp_terr[0]["territory"] == current_territory) {
				forts_to_be_rendered.push(rendered_forts[i][0]);
			}
		}
		
		var tsc = document.getElementById("territory_sprites");
		var tsctx = tsc.getContext("2d");
		if (clear == "t") {
			tsc.width = tsc.width;
		}
		var territory_offset = $(current_territory).offset();
		var div_offset = $(".map").offset();
		var sf = parseInt($(current_territory).css("max-width")) /$(current_territory).width();
		
		for (i = 0; i < forts_to_be_rendered.length; i++) {
		
			var xco = ((forts_to_be_rendered[i]["xco"])*sf) + (territory_offset.left - div_offset.left);
			var yco = ((forts_to_be_rendered[i]["yco"])*sf) + (territory_offset.top - div_offset.top);
			var img = document.getElementById("fort");
			tsctx.drawImage(img,xco,yco);
		}

	}

	else if (level == 2) {

		var current_continent = color_key[clicked[1]][0];
		var forts_to_be_rendered = [];
		var territory_list = continents[clicked[1]];
		
		for (i = 0; i < rendered_forts.length; i++) {
			for (y = 0; y < territory_list.length; y++) {
					if (rendered_forts[i][0]["territory"] == colors[territory_list[y]][0]) {
						forts_to_be_rendered.push([rendered_forts[i][0], clicked[1], territory_list[y]]);
					}
			}
		}
		var csc = document.getElementById("continent_sprites");
		var csctx = csc.getContext("2d");
		if (clear == "t") {
			csc.width = csc.width;
		}
		var continent_offset = $(current_continent).offset();
		var sf = $(current_continent).width()/color_key[clicked[1]][3][0];
		$(".canvas").css("z-index","0");
		$("#continent_sprites").css("z-index","34");
		for (i = 0; i < forts_to_be_rendered.length; i++) {
			var xco = (forts_to_be_rendered[i][0]["xco"] * sf) + (colors[forts_to_be_rendered[i][2]][2][0] - color_key[forts_to_be_rendered[i][1]][2][0]) + continent_offset.left;
			var yco = (forts_to_be_rendered[i][0]["yco"] * sf) + (colors[forts_to_be_rendered[i][2]][2][1] - color_key[forts_to_be_rendered[i][1]][2][1]) + continent_offset.top;
			var img = document.getElementById("fort");
			csctx.drawImage(img,xco,yco);
		}
	}
}


function push_object(name, ownership, territory, xco, yco) {

	if (last_submited_name != name) {
		
		rendered_forts.push({ name:name, ownership:ownership, territory:territory, xco:xco, yco:yco });
	}
		render_forts(4,"f");
	last_submited_name = name;
}


var nwidth = $(".map").width();
var nheight = $(".map").height();

$('.test1').append('<canvas id="territory_sprites" class="canvas" style="z-index:-3;" width=' + nwidth + ' height=' +  nheight + '>');
$('.test1').append('<canvas id="continent_sprites" class="canvas" style="z-index:-3;" width=' + nwidth + ' height=' +  nheight + '>');

var level;
clicked = ["f", 1];
var last_submited_name;







var placing_fort = "f";
var creating = "f";
var submited = "f";
var sudoajaxstring = "nil";

var c=document.getElementById("myCanvas");
var ctx=c.getContext("2d");

	$('#create_fort').click( function(e) {
		if (creating == "f") {

			var field_num = $(".fields").length

			if (field_num != 1) {

			$(".fields").css("display","inline");
			$(".fields:first").remove();
			}
			submited = "f";
			creating = "t";
			$("#create_fort").css("display","none");
			$("#submit").css("display","inline");
			placing_fort = "t";
			var nw = $('.map').width();
			var nh = $('.map').height();
			var sxco;
			var syco;

			var aoffset = $(".test1").offset();

			$('.test1').append('<canvas id="create_sprite_canvas" class="canvas" style="z-index:32;" width=' + nw + ' height=' +  nh + '>');
			var sc = document.getElementById("create_sprite_canvas");
			var sctx = sc.getContext("2d");
			$("#create_sprite_canvas").css("z-index","32");


			$(".test1").mousemove( function(event) {

				if (placing_fort == "t") {

					sctx.clearRect(0, 0, sc.width, sc.height);

					var fort = document.getElementById('fort');
				

					sctx.drawImage(fort,((event.pageX - aoffset.left) - 32), ((event.pageY - aoffset.top) - 32));
			
					sxco = event.pageX;
					syco = event.pageY;
				}



				$('.test1').click( function(etoo) {
					clear_for_clicks("move");
					$("#create_sprite_canvas").css("z-index","-10");

					$(colors[clicked[1]][0]).css("z-index","31");
					var telem = document.elementFromPoint(etoo.pageX, etoo.pageY);
					var name_w_hash = colors[clicked[1]][0];
					name_w_hash = name_w_hash.replace(/#/g, '');

					if (telem.id == name_w_hash) {

						var tempw = $(colors[clicked[1]][0]).width();
						var temph = $(colors[clicked[1]][0]).height();
						$('body').append('<canvas id="new_canvas" style="z-index:5; display:none;" width=' + tempw + ' height=' +  temph + '</canvas>');

						var nc=document.getElementById("new_canvas");
						var nctx=nc.getContext("2d");
						var territ = document.getElementById(name_w_hash);
						nctx.drawImage(territ,0,0);

						var ctoffset = $(colors[clicked[1]][0]).offset();

						var tpixelData = nc.getContext('2d').getImageData((etoo.pageX - ctoffset.left), (etoo.pageY - ctoffset.top), 1, 1).data;
						
						var sxco = etoo.pageX - ctoffset.left;
						var syco = etoo.pageY - ctoffset.top;

						if (tpixelData[3] != 0x00) {

							var dw = $(colors[clicked[1]][0]).width();
							var ow = parseInt($(colors[clicked[1]][0]).css("max-width"));

							if (dw != ow) {
								var wsf = dw/ow;
								sxco = sxco/wsf;
								syco = syco/wsf;
							}

							var d = new Date();

							$("#user_forts_attributes_100000000000_xco").val(sxco);
							$("#user_forts_attributes_100000000000_yco").val(syco);
							$("#user_forts_attributes_100000000000_territory").val(colors[clicked[1]][0]);
							$("#user_forts_attributes_100000000000_date_created").val(d);

							placing_fort = "f";
							clear_for_clicks("put back", ["territory"]);
						}

					}
					$("#create_sprite_canvas").css("z-index","39");
					$(colors[clicked[1]][0]).css("z-index","4");
					$('#new_canvas').remove();

				});

			});
			var submissions = 0;

				$("#submit").click( function(e) {
					submissions++;
					push_object($("#user_forts_attributes_100000000000_name").val(), $("#user_forts_attributes_100000000000_ownership").val(), $("#user_forts_attributes_100000000000_territory").val(), $("#user_forts_attributes_100000000000_xco").val(),$("#user_forts_attributes_100000000000_yco").val());
					$('#create_sprite_canvas').remove();
					$("#submit").css("display","none");
					$(".fields").css("display","none");
					creating = "f"
				});

		}
	});


	$('#create_camp').click( function(e) {

		var field_num = $(".fields").length
			if (field_num != 1) {
				$(".fields").css("display","inline");
				$(".fields:first").remove();
			}

		$("#submit").css("display","inline");
		$("#create_camp").css("display","none");
		place_object("encampment");
		$("#submit").click( function(e) {
			push_object($("#user_forts_attributes_100000000000_name").val(), $("#user_forts_attributes_100000000000_ownership").val(), $("#user_forts_attributes_100000000000_territory").val(), $("#user_forts_attributes_100000000000_xco").val(),$("#user_forts_attributes_100000000000_yco").val());
			$('#create_sprite_canvas').remove();
			$("#submit").css("display","none");
			$(".fields").css("display","none");
		});
		
	});




var last_continent;





// Drawing original canvas to hold the global active map.

	var img=document.getElementById("active");
	ctx.drawImage(img,0,0);

// Setting the default clicked value.
	var gcx;
	var gcy;
	var twidth;
	var ccontinent;
	var width = $( '.map' ).width();
	var height = $( '.map' ).height();

// Listening for clicks to zoom map.

	$(document).click(function(e) {
		if (placing_fort != "t") {
			clear_for_clicks("move");
			$(".map").css("z-index","100");
			var melem = document.elementFromPoint(e.pageX, e.pageY);
			$(".map").css("z-index","-2");
			clear_for_clicks("put back",["territory","continent","create"]);
			if (melem.id == "map") {

		 		if (placing_fort == "f") {
						$('#filter2').remove();
						$('#filter').remove();

			// Checking wether or not the map is currently zoomed to a continent.

					if (clicked[0] == "t" && clicked[2] != "t") {



			// Defining and formatting the element of the current click, and the recorded element of the last click.
	
						var elem = document.elementFromPoint(e.pageX, e.pageY);
						var continent_name = color_key[clicked[1]][0];
						continent_name = continent_name.replace(/#/g, '');



			// Finding the position of the click relative to the centered continental map.

							var coffset = $(color_key[clicked[1]][0]).offset();
							var cx = (e.pageX - coffset.left );
							var cy = (e.pageY - coffset.top );
			


			// Finding the scale of the displayed continent to its full size and applying that to the click coordinates.

							var sf = $(color_key[clicked[1]][0]).width()/color_key[clicked[1]][3][0];
							cx = cx/sf;
							cy = cy/sf;



			// Clearing the canvas and painting on it the appropriate continental active map.

							ctx.clearRect(0, 0, c.width, c.height);
							var active_img_name = continent_name.concat('_active')
							var img = document.getElementById(active_img_name);
							ctx.drawImage(img,0,0);



			// Finding the color of the pixel at the specified location on the active map.

						var pixelData = c.getContext('2d').getImageData(cx, cy, 1, 1).data;



			// Checking if the current click is on the same continent as the last click.

						if ((elem.id == continent_name) && (pixelData[0] != 0x49 && pixelData[1] != 0x49 && pixelData[2] != 0x49)) {



			// Checking the found pixels color against the list of territorial colors.

							for (var i = 0; i < 38 ; i++) {

								if (colors[i][1][0] == pixelData[0] && colors[i][1][1] == pixelData[1] && colors[i][1][2] == pixelData[2]) {



			// Finding the clicked territorys id and setting its display value to inline.

									var clicked_continent = colors[i][0];
									$(clicked_continent).css('max-height', $(clicked_continent).height());
									$(clicked_continent).css('max-width', $(clicked_continent).width());
									$(clicked_continent).css('display','inline');
									$("#create_fort").css("display","inline");
									$("#create_camp").css("display","inline");
									twidth = $(clicked_continent).width();

									$('.test1').append($('<canvas id="filter2" style="z-index:3;" width=' + width + ' height=' +  height + '>'));
									$('.test1').append($('<canvas id="filter" style="z-index:1;" width=' + width + ' height=' +  height + '>'));
									var f=document.getElementById("filter2");
									var ftx=f.getContext("2d");
									ftx.fillStyle = "#000000";
									ftx.fillRect(0,0,width,height);

									var f2=document.getElementById("filter");
									var ftx2=f2.getContext("2d");
									ftx2.fillStyle = "#000000";
									ftx2.fillRect(0,0,width,height);
									$('#filter').css('opacity','0.5625');

			// Finding the width and height values of the global map and the clicked territory to find whether the territory width or height is a greater percentage of the global value.

									var imgw = $(clicked_continent).width();
									var imgh = $(clicked_continent).height();
									var mapw = $('.map').width();
									var maph = $('.map').height();
									var asf = mapw/3508

									var toffset = $(color_key[clicked[1]][0]).offset();
									var offset = $('.map').offset();
									var startingx = colors[i][2][0];
									var startingy = colors[i][2][1];
					
									var continentx = color_key[clicked[1]][2][0];
									var continenty = color_key[clicked[1]][2][1];

									var continentw = color_key[clicked[1]][3][0];
									var rcontinentw = $(color_key[clicked[1]][0]).width();

									var csf = rcontinentw/continentw;
						
									var placex = (startingx - continentx)*csf;
									var placey = (startingy - continenty)*csf;
						
									var ox = (startingx - continentx);
									var oy = (startingy - continenty);

									placex = placex + (toffset.left - offset.left);
									placey = placey + (toffset.top - offset.top);

									var wper = imgw/(mapw - placex);
									var hper = imgh/(maph - placey);
			// Finding the dimensions of the territorial picture to be diplayed.

									if (wper > hper) {
						
										if (imgw > (mapw - placex) ) {
											$(clicked_continent).attr('width', (mapw - placex) );
										}
									}

									else {

										if (imgh > (maph - placey) ) {
											$(clicked_continent).attr('height', (maph - placey) );
										}
									}
			
		

			// Finding the position to place the territorial picture.

									$(clicked_continent).css("left", placex );
									$(clicked_continent).css("top", placey );
						
									clicked = ["t", i, "t"];
									render_forts(4,"t");
									$("#territory_sprites").css("z-index","34");
								}
							}
						}



			//Continent when click away
			 
						else {
						$('.continent').css("display", "none" );
						clear_canvas("continent_sprites");
						clicked = ["f", 0];
	
						}
					}

					else if (clicked[0] == "t" && clicked[2] == "t") {



			// Defining and formatting the element of the current click, and the recorded element of the last click.
						clear_for_clicks("move",false);
						var elem = document.elementFromPoint(e.pageX, e.pageY);
						clear_for_clicks("put back",["territory","create"]);
						var continent_name = colors[clicked[1]][0];
						continent_name = continent_name.replace(/#/g, '');


			// Finding the position of the click relative to the centered continental map.

						var toffset = $(colors[clicked[1]][0]).offset();
						var tx = (e.pageX - toffset.left );
						var ty = (e.pageY - toffset.top );
			


			// Finding the scale of the displayed continent to its full size and applying that to the click coordinates.

						var tsf = $(colors[clicked[1]][0]).width()/twidth;
						tx = tx/tsf;
						ty = ty/tsf;



			// Clearing the canvas and painting on it the appropriate continental active map.

						ctx.clearRect(0, 0, c.width, c.height);
						var img = document.getElementById(continent_name);
						ctx.drawImage(img,0,0);



			// Finding the color of the pixel at the specified location on the active map.

						var pixelData = c.getContext('2d').getImageData(tx, ty, 1, 1).data;



			// Second click on a territory

						if ((elem.id == continent_name) && (pixelData[3] != 0x00)) {
							$('.test1').append($('<canvas id="filter2" style="z-index:3;" width=' + width + ' height=' +  height + '>'));
							$('.test1').append($('<canvas id="filter" style="z-index:1;" width=' + width + ' height=' +  height + '>'));
							var f=document.getElementById("filter2");
							var ftx=f.getContext("2d");
							ftx.fillStyle = "#000000";
							ftx.fillRect(0,0,width,height);
							var f2=document.getElementById("filter");
							var ftx2=f2.getContext("2d");
							ftx2.fillStyle = "#000000";
							ftx2.fillRect(0,0,width,height);
							$('#filter').css('opacity','0.5625');

						}

			// Territory when click away
						else {
							clicked = last_continent;
							render_forts(2,"t");
							$('#create_fort').css("display","none");
							$('.territory').css("display", "none" );
							$('.test1').append('<canvas id="filter" style="z-index:1;" width=' + $(".map").width() + ' height=' +  $(".map").height() + '>');
							var f=document.getElementById("filter");
							var ftx=f.getContext("2d");
							ftx.fillStyle = "#000000";
							ftx.fillRect(0,0,$(".map").width(),$(".map").height());
							$('#filter').css('opacity','0.75');

							clicked = ["t", ccontinent];
						}
					}

					else {



			// Drawing the global active map on the canvas

						img=document.getElementById("active");
						ctx.drawImage(img,0,0);	



			// Finding the location of the click relative to the map.

						var offset = $(".map").offset();
						var x = (e.pageX - offset.left );
						var y = (e.pageY - offset.top );



			// Finding the width and height of the diplayed global map and the scale factor of the displayed map to the full one, then appling the scale factor to the click coordinates.
			 
						var sf = 3508/width;
						x = x * sf;
						y = y * sf;



			// Finding the color of the specified pixel on the active map.

						var pixelData = c.getContext('2d').getImageData(x, y, 1, 1).data;
	


			// Checking every continent active color to see if it matches the found pixel color.

						for (var i = 0; i < 6 ; i++) {

							if (color_key[i][1][0] == pixelData[0] && color_key[i][1][1] == pixelData[1] && color_key[i][1][2] == pixelData[2]) {



			// Finding the clicked continents id and setting its display value to inline.

								var clicked_territory = color_key[i][0];
								$(clicked_territory).css("display", "inline" );


			// Creating and drawing on a canvas at seventy-five percent opacity.
								ccontinent = i;
								$('.test1').append($('<canvas id="filter" style="z-index:1;" width=' + width + ' height=' +  height + '</canvas>'));
								var f=document.getElementById("filter");
								var ftx=f.getContext("2d");
								ftx.fillStyle = "#000000";
								ftx.fillRect(0,0,width,height);
	


			// Finding the continent and global map images width and height values, then seeing which continental dimension is a larger percentage of the global one.

								var imgw = $(clicked_territory).width();
								var imgh = $(clicked_territory).height();
								var mapw = $('.map').width();
								var maph = $('.map').height();
								var wper = imgw/(mapw);
								var hper = imgh/(maph);



			// Finding the dimensions of the continent image to be displayed.

								if (wper > hper) {
	
									if (imgw > mapw) {

										$(clicked_territory).attr("width", mapw );
									}

								}

								else {

									if (imgh > maph ) {

										$(clicked_territory).attr("height", maph );

									}
								}



			// Finding the position of the diplayed continental image.

								imgw = $(clicked_territory).width();
								imgh = $(clicked_territory).height();
								var midh = (maph/2) - (imgh/2);
								var midw = (mapw/2) - (imgw/2);
								gcx = midw;
								gcy = midh;
								$(clicked_territory).css("left", midw );
								$(clicked_territory).css("top",midh );

								clicked = ["t",i];
								last_continent = clicked;
								render_forts(2,"t");
							}
						}
					}
				}
			}
		}
	});
});
"`"
